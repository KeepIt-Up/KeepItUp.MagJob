services:
  # Główny Load Balancer
  haproxy:
    image: haproxy:latest
    ports:
      - "80:80"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - client.web
      - apigateway.web

  # Frontend
  client.web:
    image: ${DOCKER_REGISTRY-}clientweb
    build:
      context: ./src/Client.Web
      dockerfile: Dockerfile
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - apigateway.web

  # API Gateway (z wbudowanym load balancerem)
  apigateway.web:
    image: ${DOCKER_REGISTRY-}apigatewayweb
    build:
      context: .
      dockerfile: src/APIGateway.Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNET_ENVIRONMENT:-Development}
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_HTTPS_PORTS=443
    ports:
      - "80"
      - "443"
    depends_on:
      - organizations.api

  # Mikrousługi
  organizations.api:
    image: ${DOCKER_REGISTRY-}organizationsapi
    build:
      context: .
      dockerfile: src/Organizations.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNET_ENVIRONMENT:-Development}
      - ConnectionStrings__OrganizationConnection=${DB_CONNECTION_STRING}
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_HTTPS_PORTS=443
    ports:
      - "80"
      - "443"
    depends_on:
      magjob.database:
        condition: service_healthy

  # Keycloak (Identity Server)
  keycloak:
    image: quay.io/keycloak/keycloak:26.1
    command: start-dev --import-realm
    ports:
      - "18080:8080"
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_USERNAME=${KEYCLOAK_DB_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    volumes:
      - ./src/Keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-db:
    image: postgres:17.2
    environment:
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
    volumes:
      - ${APPDATA}/MagJob2.0/db/keycloak:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER} -d ${KEYCLOAK_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # PostgreSQL (baza danych)
  magjob.database:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${APPDATA}/MagJob2.0/db/magjob:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
